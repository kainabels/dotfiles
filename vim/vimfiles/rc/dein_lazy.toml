[[plugins]] # sudo
repo = 'sudo.vim'
on_if = 1

[[plugins]] # unite source: mru
repo = 'Shougo/neomru.vim'
on_if = 1

[[plugins]]
repo = 'Shougo/neoyank.vim'
on_if = 1
on_source = 'unite.vim'

[[plugins]]
repo = 'Shougo/unite.vim'
depends = 'neomru.vim'
hook_add = '''"{{{
	" インサートモードで起動
	let g:unite_enable_start_insert = 1
	let g:unite_source_history_yank_enable = 1
	let g:unite_source_file_mru_limit = 200
	" スペースキーに変更
	nnoremap [unite] <Nop>
	nmap <Space>u [unite]
	nnoremap [unite]u :<C-u>Unite 
	"nnoremap [unite]r :<C-u>Unite rails/
	"nnoremap [unite]rc :<C-u>Unite rails/controller<CR>
	"nnoremap [unite]rm :<C-u>Unite rails/model<CR>
	"nnoremap [unite]rv :<C-u>Unite rails/view<CR>
	"nnoremap [unite]rs :<C-u>Unite rails/stylesheet<CR>
	"nnoremap [unite]rj :<C-u>Unite rails/javascript<CR>
	"nnoremap [unite]rr :<C-u>Unite rails/route<CR>
	"nnoremap <silent> [unite]y :<C-u>Unite history/yank<CR>
	nnoremap <silent> [unite]b :<C-u>Unite buffer<CR>
	nnoremap <silent> [unite]f :<C-u>UniteWithBufferDir -buffer-name=files buffer file_mru bookmark file<CR>
	nnoremap <silent> [unite]F :<C-u>UniteWithCurrentDir -buffer-name=files buffer file_mru bookmark file<CR>
	"nnoremap <silent> [unite]r :<C-u>Unite -buffer-name=register register<CR>
	nnoremap <silent> [unite]m :<C-u>Unite file_mru buffer<CR>
	"nnoremap <silent> [unite]g :<C-u>Unite grep:. -buffer-name=search-buffer<CR>
	"nnoremap <silent> [unite]s :<C-u>UniteResume search-buffer<CR>
	autocmd FileType unite call s:unite_my_settings()
	function! s:unite_my_settings()
		nmap <buffer> <ESC> <Plug>(unite_exit)
	endfunction 
"}}}'''

[[plugins]]
repo = 'kana/vim-operator-replace'
depends = 'vim-operator-user'
on_map = [['nx', '<Plug>']]
hook_add = '''"{{{
xmap p <Plug>(operator-replace)
"}}}'''

[[plugins]] # operator: surround
repo = 'rhysd/vim-operator-surround'
depends = 'vim-operator-user'
on_map = [['n', '<Plug>']]
hook_add = '''"{{{
map <silent>[op]a <Plug>(operator-surround-append)
map <silent>[op]d <Plug>(operator-surround-delete)
map <silent>[op]r <Plug>(operator-surround-replace)
" delete or replace most inner surround
" if you use vim-textobj-multiblock
nmap <silent>[op]dd <Plug>(operator-surround-delete)<Plug>(textobj-multiblock-a)
nmap <silent>[op]rr <Plug>(operator-surround-replace)<Plug>(textobj-multiblock-a)

" if you use vim-textobj-between
nmap <silent>[op]db <Plug>(operator-surround-delete)<Plug>(textobj-between-a)
nmap <silent>[op]rb <Plug>(operator-surround-replace)<Plug>(textobj-between-a)
"}}}'''


